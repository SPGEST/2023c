1. App Inventor 설정:
UI 구성 요소로 Button(On, Off), TextBox(음의 숫자 입력), 및 Web을 추가합니다.
"On" 버튼을 클릭하면 프로세싱 서버에 요청을 보내어 LED를 켜고, "Off" 버튼을 클릭하면 LED를 끄도록 블록을 설정합니다.
Send 버튼을 클릭하면 입력된 숫자를 프로세싱 서버에 전송하여 해당 음을 재생하도록 블록을 설정합니다.

2. 프로세싱 서버 코드
import processing.net.*;

Server server;
int ledPin = 7;

void setup() {
  server = new Server(this, 12345);
}

void draw() {
  Client client = server.available();
  if (client != null) {
    String message = client.readString().trim();
    println("Received message: " + message);
    
    if (message.equals("on")) {
      digitalWrite(ledPin, HIGH);
    } else if (message.equals("off")) {
      digitalWrite(ledPin, LOW);
    } else {
      int note = Integer.parseInt(message);
      playTone(note);
    }
    
    client.stop();
  }
}

void playTone(int note) {
  // Code to play tone based on the note (implement as per your requirements)
}

void digitalWrite(int pin, int value) {
  // Code to control the Arduino LED based on the value (HIGH/LOW)
}

3. 아두이노 코드
#define SPEAKER_PIN 4

void setup() {
  pinMode(SPEAKER_PIN, OUTPUT);
}

void loop() {
  // Code to read input from the Processing server and play the corresponding note on the speaker
}